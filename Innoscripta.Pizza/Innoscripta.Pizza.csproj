<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoMapper" Version="9.0.0" />
        <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="7.0.0" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="8.6.2" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.4" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.4" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.4" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.3" />
        <PackageReference Include="Serilog" Version="2.9.0" />
        <PackageReference Include="Serilog.AspNetCore" Version="3.2.0" />
        <PackageReference Include="Serilog.Settings.Configuration" Version="3.1.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\jest-ci.config.js" />
        <Content Include="ClientApp\jest-ignore-import.js" />
        <Content Include="ClientApp\jest.config.js" />
        <TypeScriptCompile Include="ClientApp\src\components\index.ts" />
        <TypeScriptCompile Include="ClientApp\src\components\pizza-header-menu\pizza-header-menu.tsx" />
        <TypeScriptCompile Include="ClientApp\src\components\pizza-header\pizza-header.tsx" />
        <Content Include="ClientApp\src\components\pizza-header-menu\pizza-header-menu.scss" />
        <Content Include="ClientApp\src\components\pizza-header\pizza-header.scss" />
        <Content Include="ClientApp\src\components\pizza-logo\pizza-logo.scss" />
        <Content Include="ClientApp\src\constants.scss" />
        <Content Include="ClientApp\src\images\shared\logo.png" />
        <Content Include="ClientApp\src\index.html" />
        <Content Include="ClientApp\src\main.scss" />
        <Content Include="ClientApp\src\pages\main\main.scss" />
        <Content Include="ClientApp\webpack.config.js" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Remove="ClientApp\public\**" />
        <Content Remove="ClientApp\public\**" />
        <None Remove="ClientApp\src\store\**" />
        <Content Remove="ClientApp\src\store\**" />
        <None Include="ClientApp\src\pages\index.ts" />
        <None Include="ClientApp\src\redux\middlewares\index.ts" />
        <None Include="ClientApp\src\redux\reducers\index.ts" />
        <None Include="ClientApp\src\routing\index.ts" />
        <None Include="ClientApp\src\routing\routing.ts" />
        <TypeScriptCompile Include="ClientApp\src\images\index.ts" />
        <TypeScriptCompile Include="ClientApp\src\images\shared\index.ts" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="ClientApp\public\**" />
      <Compile Remove="ClientApp\src\store\**" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="ClientApp\public\**" />
      <EmbeddedResource Remove="ClientApp\src\store\**" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="AppStart" />
      <Folder Include="ClientApp\src\contratcs" />
      <Folder Include="ClientApp\src\enums" />
      <Folder Include="ClientApp\src\factories" />
      <Folder Include="ClientApp\src\hocs" />
      <Folder Include="ClientApp\src\hooks" />
      <Folder Include="ClientApp\src\models" />
      <Folder Include="ClientApp\src\redux\actions" />
      <Folder Include="ClientApp\src\redux\selectors" />
      <Folder Include="ClientApp\src\services" />
      <Folder Include="ClientApp\src\utils" />
      <Folder Include="ClientApp\src\validators" />
      <Folder Include="Controllers" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
