// <auto-generated />
using System;
using Innoscripta.Pizza.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Innoscripta.Pizza.Migrations
{
    [DbContext(typeof(PizzaDbContext))]
    [Migration("20200527225120_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.CommentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("Stars")
                        .HasColumnType("smallint");

                    b.Property<string>("Text")
                        .HasColumnType("character varying(1024)")
                        .HasMaxLength(1024);

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OrderEntity");
                });

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.OrderItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItemEntity");
                });

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Img")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "<b>Ingredients:</b> pizza sauce, Mozzarella and Parmesan cheeses, champignons, bacon, pepperoni sausage, tomatoes, chicken breast, garlic, red onion, greens.",
                            Img = "/images/pizzas/pizzaman.png",
                            Name = "Pizzaman",
                            Price = 4m,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "<b>Ingredients:</b> pizza sauce, Mozzarella cheese, pepperoni sausage, champignons.",
                            Img = "/images/pizzas/pepperoni.png",
                            Name = "Pepperoni",
                            Price = 5m,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "<b>Ingredients:</b> pizza sauce, mozzarella cheese, ham, pineapple.",
                            Img = "/images/pizzas/hawaiian.png",
                            Name = "Hawaiian",
                            Price = 4m,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "<b>Ingredients:</b> pizza sauce, mozzarella cheese, tomatoes.",
                            Img = "/images/pizzas/margarita.png",
                            Name = "Margarita",
                            Price = 4.5m,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "<b>Ingredients:</b> pizza sauce, mozzarella and parmesan cheeses, ham, mushrooms, pepperoni, jalapenos.",
                            Img = "/images/pizzas/dragon.png",
                            Name = "Dragon",
                            Price = 5m,
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "<b>Ingredients:</b> mustard sauce, Mozzarella cheese, chicken breast, red onion, mushrooms, garlic.",
                            Img = "/images/pizzas/chicken-julienne.png",
                            Name = "Chicken julienne",
                            Price = 6.5m,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "<b>Ingredients:</b> pizza sauce, Mozzarella, Parmesan, Cheddar cheeses, blue noble cheese.",
                            Img = "/images/pizzas/four-cheeses.png",
                            Name = "Four cheeses",
                            Price = 7m,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            Img = "/images/drinks/coca-cola.png",
                            Name = "Coca-cola",
                            Price = 2m,
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            Img = "/images/drinks/fanta.png",
                            Name = "Fanta",
                            Price = 2m,
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Img = "/images/drinks/cranberry-juice.png",
                            Name = "Four cheeses",
                            Price = 3m,
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            Img = "/images/drinks/bon-aqua.png",
                            Name = "Bon aqua",
                            Price = 1m,
                            Type = 2
                        });
                });

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Phone")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.CommentEntity", b =>
                {
                    b.HasOne("Innoscripta.Pizza.Data.Domain.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.OrderEntity", b =>
                {
                    b.HasOne("Innoscripta.Pizza.Data.Domain.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Innoscripta.Pizza.Data.Domain.OrderItemEntity", b =>
                {
                    b.HasOne("Innoscripta.Pizza.Data.Domain.OrderEntity", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Innoscripta.Pizza.Data.Domain.ProductEntity", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
